#pragma once

// provide WiFi settings
static const char* WIFI_SSID_1 = "YOUR SSID";
static const char* WIFI_PSK_1 = "YOUR PRE SHARED KEY";
static const char* WIFI_SSID_2 = "YOUR SSID";
static const char* WIFI_PSK_2 = "YOUR PRE SHARED KEY";

// provide WiFi AP settings
const char* WIFI_AP_SSID = "MyESP";
const char* WIFI_AP_PSK = "password";

// provide Parse Server settings
const char *PARSE_HOST = "YOUR PARSE SERVER";
static const char* PARSE_URI = "YOUR URI PATH";
static const char* PARSE_APPLICATION_ID = "YOUR PARSE APPLICATION ID";
static const char* PARSE_REST_API_KEY = "YOUR PARSE REST API KEY";
static const char* PARSE_SESSION_TOKEN = "A RESTRICTED SESSION TOKEN";

// X.509 settings - used by ESP8266
static const char PARSE_PROVIDER_PUB_KEY[] PROGMEM = R"KEY(
-----BEGIN PUBLIC KEY-----

ENTER PUBLIC KEY OF YOUR PARSE PROVIDER

$openssl s_client -showcerts -connect <PARSE SERVER DOMAIN>:443

Copy appropriate certificate and save as cert.pem

$openssl x509 -pubkey -noout -in cert.pem

Copy output and paste it here.

-----END PUBLIC KEY-----
)KEY";

// X.509 settings - used by ESP32
static const char PARSE_PROVIDER_CA[] PROGMEM = R"KEY(
-----BEGIN CERTIFICATE-----

$openssl s_client -showcerts -connect <PARSE SERVER DOMAIN>:443

Copy appropriate certificate and paste it here.

-----END CERTIFICATE-----
)KEY";

//#define INSECURE // bypass X.509 - use with care

// define appropriate http settings
static const uint32_t HTTP_TIMEOUT = 10000;

// enable or disbale usage of mock data
static const bool USE_MOCK_DATA = false;

// define deep sleep interval in micro seconds
static const uint32_t DEEP_SLEEP_INTERVAL = 15 * 60 * 1e6; // 15 minutes

// define loop interval in milli seconds
static const uint16_t LOOP_INTERVAL = 15 * 1000; // 15s